from datetime import datetime, timedelta
from database import Database

class GroupTasksManager:
    def __init__(self, db: Database):
        self.db = db
        self.ivtb_labs = {
            "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ": [
                {
                    "title": "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏",
                    "deadline": None,  # –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                },
                {
                    "title": "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏",
                    "deadline": None,
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                },
                {
                    "title": "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ñ—Ä–∞–∫—Ç–∞–ª–æ–≤",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ—Ä–∞–∫—Ç–∞–ª–æ–≤",
                    "deadline": None,
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                },
                {
                    "title": "–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å–æ —Å—Ä–µ–¥–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Delphi/Lazarus",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ –æ—Å–≤–æ–µ–Ω–∏—é —Å—Ä–µ–¥—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Delphi/Lazarus",
                    "deadline": None,
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                }
            ],
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞": [
                {
                    "title": "–°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å–æ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏",
                    "deadline": None,
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                },
                {
                    "title": "–ü–¨–ï–ó–û–≠–õ–ï–ú–ï–ù–¢, –ú–ò–ö–†–û–°–•–ï–ú–´",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø—å–µ–∑–æ—ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏ –º–∏–∫—Ä–æ—Å—Ö–µ–º–∞–º–∏",
                    "deadline": None,
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                },
                {
                    "title": "–°–í–ï–¢–û–î–ò–û–î–ù–´–ï –°–ë–û–†–ö–ò",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å–æ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–º–∏ —Å–±–æ—Ä–∫–∞–º–∏",
                    "deadline": None,
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                },
                {
                    "title": "–î–ò–°–ü–õ–ï–ô, –ú–û–¢–û–†, –°–í–ï–¢–û–î–ò–û–î–ù–´–ï –ú–ê–¢–†–ò–¶–´",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –¥–∏—Å–ø–ª–µ—è–º–∏, –º–æ—Ç–æ—Ä–∞–º–∏ –∏ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–º–∏ –º–∞—Ç—Ä–∏—Ü–∞–º–∏",
                    "deadline": None,
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                },
                {
                    "title": "–°–ë–û–†–ö–ò –ë–ï–ó –ü–†–û–ì–†–ê–ú–ú–ò–†–û–í–ê–ù–ò–Ø",
                    "description": "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–æ —Å–±–æ—Ä–∫–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è",
                    "deadline": None,
                    "priority": "üü° –°—Ä–µ–¥–Ω–∏–π"
                }
            ]
        }

    async def add_labs_for_new_student(self, user_id: int, group_name: str):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –ò–í–¢–± 1 –∫—É—Ä—Å–∞"""
        if not group_name.startswith("–ò–í–¢–±-1"):
            return False

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–¥–ª–∞–π–Ω—ã –¥–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç
        current_date = datetime.now()
        for subject, labs in self.ivtb_labs.items():
            for i, lab in enumerate(labs):
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–∞–±–æ—Ç—ã
                deadline = current_date + timedelta(weeks=2 + i)
                lab["deadline"] = deadline

                # –î–æ–±–∞–≤–ª—è–µ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é —Ä–∞–±–æ—Ç—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                success = await self.db.add_task(
                    user_id=user_id,
                    title=lab["title"],
                    task_type="üî¨ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è",
                    subject=subject,
                    deadline=deadline,
                    description=lab["description"],
                    priority=lab["priority"]
                )
                if not success:
                    return False

        return True 