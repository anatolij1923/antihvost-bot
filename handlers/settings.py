from aiogram import Router, types, F
from aiogram.types import Message, CallbackQuery
from database.database import Database
from keyboards.menu import get_settings_keyboard, get_main_keyboard

router = Router()
db = Database()

@router.callback_query(lambda c: c.data == "settings")
async def handle_settings(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        reply_markup=get_settings_keyboard()
    )

@router.callback_query(lambda c: c.data == "profile")
async def handle_profile(callback: CallbackQuery):
    student = await db.get_student(callback.from_user.id)
    if not student:
        await callback.answer("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        return
    
    await callback.message.edit_text(
        f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
        f"–§–ò–û: {student.full_name}\n"
        f"–ì—Ä—É–ø–ø–∞: {student.group_name}",
        reply_markup=get_settings_keyboard()
    )

@router.callback_query(lambda c: c.data == "notifications")
async def handle_notifications(callback: CallbackQuery):
    await callback.answer("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è")

@router.callback_query(lambda c: c.data == "support")
async def handle_support(callback: CallbackQuery):
    await callback.answer("–ë–æ–≥ –≤–∞–º –≤ –ø–æ–º–æ—â—å üôè")

@router.callback_query(lambda c: c.data == "back_to_main")
async def handle_back(callback: CallbackQuery):
    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=get_main_keyboard()
    ) 