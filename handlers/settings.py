from aiogram import Router, types, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from database.database import Database
from keyboards.menu import get_settings_keyboard, get_main_keyboard
from keyboards.settings import get_notifications_keyboard

router = Router()
db = Database()

@router.message(Command("settings"))
async def settings(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings"""
    await message.answer(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        reply_markup=get_settings_keyboard()
    )

@router.callback_query(lambda c: c.data == "settings")
async def handle_settings(callback: CallbackQuery):
    await callback.message.edit_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        reply_markup=get_settings_keyboard()
    )

@router.callback_query(lambda c: c.data == "profile")
async def handle_profile(callback: CallbackQuery):
    student = await db.get_student(callback.from_user.id)
    if not student:
        await callback.answer("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        return
    
    await callback.message.edit_text(
        f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
        f"–§–ò–û: {student.full_name}\n"
        f"–ì—Ä—É–ø–ø–∞: {student.group_name}",
        reply_markup=get_settings_keyboard()
    )

@router.callback_query(F.data == "notifications")
async def notifications_settings(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    is_enabled = await db.are_notifications_enabled(callback.from_user.id)
    status = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if is_enabled else "‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã"
    
    await callback.message.edit_text(
        f"üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
        f"–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status}\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –¥–µ–¥–ª–∞–π–Ω–∞—Ö.",
        reply_markup=get_notifications_keyboard(is_enabled)
    )

@router.callback_query(F.data == "toggle_notifications")
async def toggle_notifications(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    new_state = await db.toggle_notifications(callback.from_user.id)
    status = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if new_state else "‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã"
    
    await callback.message.edit_text(
        f"üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
        f"–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {status}\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –¥–µ–¥–ª–∞–π–Ω–∞—Ö.",
        reply_markup=get_notifications_keyboard(new_state)
    )

@router.callback_query(lambda c: c.data == "support")
async def handle_support(callback: CallbackQuery):
    await callback.answer("–ë–æ–≥ –≤–∞–º –≤ –ø–æ–º–æ—â—å üôè")

@router.callback_query(lambda c: c.data == "back_to_main")
async def handle_back(callback: CallbackQuery):
    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=get_main_keyboard()
    )

@router.callback_query(F.data == "back_to_settings")
async def back_to_settings(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"""
    await callback.message.edit_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        reply_markup=get_settings_keyboard()
    ) 